{"version":3,"sources":["undraw_breakfast_psiw.svg","logo.svg","Pizza.js","redux/actions.js","components/NavBar.js","components/Login.js","components/Signup.js","components/HomePage.js","components/StartPage.js","Style.js","components/Profile.js","App.js","serviceWorker.js","redux/queryReducer.js","index.js","redux/placeReducer.js","redux/loginReducer.js","redux/ordersReducer.js"],"names":["module","exports","Pizza","className","src","Background","alt","setUserAction","userObj","type","payload","API_KEY","process","addOrder","order","getOrder","addPlaceToProfile","restaurantObj","userID","dispatch","fetch","BASE_URL","method","headers","body","JSON","stringify","user_id","name","place_id","then","r","json","savedRest","console","log","getRestaurants","placeID","data","results","getPlace","args","placeArr","addPlace","newPlace","getQuery","query","fetchQuery","newUserToDB","config","user","localStorage","setItem","token","deleteUserFromDB","userId","id","USERS_URL","clear","loginUserToDB","userCredentials","error","alert","restaurants","catch","err","persistUser","Authorization","userInstance","logoutUser","useStyles","makeStyles","theme","toolbar","borderBottom","palette","divider","toolbarTitle","flex","toolbarSecondary","justifyContent","overflowX","toolbarLink","padding","spacing","flexShrink","Header","props","classes","username","sections","title","useSelector","state","login","text","useDispatch","loggedIn","to","IconButton","Button","variant","size","onClick","userActions","Fragment","Toolbar","Typography","component","color","align","noWrap","style","textDecoration","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","grey","backgroundSize","backgroundPosition","paper","margin","display","flexDirection","alignItems","avatar","secondary","main","form","width","marginTop","submit","Login","useState","password","loginForm","setLoginForm","history","useHistory","handleChange","e","target","value","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","onSubmit","preventDefault","push","TextField","required","fullWidth","label","autoComplete","onChange","autoFocus","FormControlLabel","control","Checkbox","Box","mt","Signup","signupForm","setSignupForm","StartPage","place","setState","handleSelect","encodedPlace","handleSubmit","evt","uri","uri2","encoded2","encodeURI","replace","redirect","this","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","Input","action","placeholder","map","suggestion","active","cursor","description","React","Component","googleApi","GoogleApiWrapper","apiKey","actions","fetchPlace","connect","styled","h2","img","li","ul","mark","div","SSkeletonPulse","Profile","cards","setCards","ifUser","useEffect","generateCards","newInfoRest","forEach","result","textAlign","columns","divided","Row","card","ifPhoto","photos","photo_reference","opening_hours","Column","Card","Image","Content","Description","extra","Rating","icon","defaultRating","rating","maxRating","App","path","render","HomePage","Boolean","window","location","hostname","match","initialState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f57ee3f1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/undraw_breakfast_psiw.036328e2.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.2b788b00.svg\";","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Background from './undraw_breakfast_psiw.svg'\n\nfunction Pizza() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={Background} className='background' />\n        <img src={'http://www.pngmart.com/files/1/Pepperoni-Pizza.png'} className=\"App-logo\" alt=\"logo\"  />\n        \n      \n      </header>\n    </div>\n  );\n}\n\nexport default Pizza;\n","\n\n\n\n\n\n\n\n////////////////////////LOGIN///////////////////////////////////\n\n// API CONSTANTS\n\nconst BASE_URL = 'http://localhost:3000';\nconst USERS_URL = BASE_URL + '/users';\nconst PERSIST_URL = BASE_URL + '/persist';\nconst LOGIN_URL = BASE_URL + '/login';\nconst SPECIFIC_USER_URL = id => USERS_URL + '/' + id;\n\n// Redux Actions\n\n\nconst setUserAction = userObj => ({\n  type: 'SET_USER',\n  payload: userObj\n});\n\nconst clearUserAction = () => ({\n  type: 'CLEAR_USER'\n});\n\n// Fetch\n\nconst newUserToDB = userObj => dispatch => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  };\n  fetch(USERS_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      dispatch(setUserAction(data.user));\n      localStorage.setItem('token', data.token);\n      \n    });\n};\n\nconst deleteUserFromDB = userId => dispatch => {\n  const config = {\n    method: 'DELETE'\n  };\n  fetch(SPECIFIC_USER_URL(userId), config).then(r => {\n    dispatch(clearUserAction());\n    localStorage.clear();\n  });\n};\n\nconst loginUserToDB = userCredentials => dispatch => {\n  const config = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userCredentials)\n  };\n  fetch(LOGIN_URL, config)\n    .then(r => r.json())\n    .then(data => {\n      if(data.error){\n        console.log('errooor')\n        alert('incorrect login')\n      }\n      dispatch(setUserAction(data.user));\n      dispatch(getOrder(data.user.restaurants))\n      localStorage.setItem('token', data.token);\n    })\n      .catch(err => console.log('error'))\n};\n\nconst persistUser = () => dispatch => {\n  const config = {\n    method: 'GET',\n    headers: {\n      Authorization: `bearer ` + localStorage.token\n    }\n  };\n  fetch(PERSIST_URL, config)\n    .then(r => r.json())\n    .then(userInstance => {\n      dispatch(setUserAction(userInstance));\n    });\n};\n\nconst logoutUser = () => dispatch => {\n  dispatch(clearUserAction());\n  localStorage.clear();\n};\n////////////////////////////////////////////////////////////////\n\n\nconst API_KEY=process.env.REACT_APP_GOOGLE_PLACES_KEY\nconst QUERY = 'bronx'\nconst URL = `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+near+Brooklyn%20NY%20USA&rankby=prominence&\n&key=${API_KEY}`\n\nconst getPlaceAction = place => ({\n  type: 'GET_PLACE',\n  payload: place\n});\n\nconst addPlace = (newPlace) => {\n  return {\n    type: \"ADD_PLACE\",\n    payload: newPlace\n  }\n}\nconst getQuery = (query) => ({\n  type: 'GET_QUERY',\n  payload: query\n})\n\n\n\nconst getPlace = (args) => dispatch => {\n  fetch(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+near+${args}&rankby=prominence&\n  &key=${API_KEY}`)\n    .then(r => r.json())\n    .then((placeArr) => { dispatch(getPlaceAction(placeArr.results))\n    })\n}\n\n\n\nconst fetchQuery = (query) => ({\n  type: 'FETCH_QUERY',\n  payload: query\n})\n\n  // function fetchPlace(query){\n  //   return dispatch => {\n  //     fetch(`https://maps.googleapis.com/maps/api/place/textsearch/json?query=restaurants+near+${query}&\n  //   &key=${API_KEY}`)\n  //     .then(r => r.json())\n  //     .then((placeArr) => { dispatch(getPlaceAction(placeArr.results))\n  //     })\n  //   }\n  // }\n\n  /////////////////////////order/////////////////////\n  \n  const RESTAURANT_URL = BASE_URL + '/restaurants';\n\n  const SPECIFIC_RESTAURANT_URL = id => RESTAURANT_URL + '/' + id;\n\n  const addOrder = (order) => ({\n    type: 'ADD_ORDER',\n    payload: order\n  })\n  const getOrder = (order) => ({\n    type: 'GET_ORDER',\n    payload: order\n  })\n\n  const getRestaurants = (placeID) => dispatch => {\n    fetch(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/details/json?placeid=${placeID}&key=${API_KEY}`)\n    .then(r => r.json())\n    .then((data) => { dispatch(addOrder(data.results[0]))\n    })\n  }\n\n  \n  \n\n\n\n  const addPlaceToProfile = (restaurantObj, userID) => dispatch => {\n    fetch(RESTAURANT_URL, {\n      method:'POST',\n      headers: { \n        'content-type': 'application/json',\n        'accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user_id: userID,\n      name: restaurantObj.name,\n      place_id: restaurantObj.place_id\n      })\n    })\n      .then(r => r.json())\n      .then(savedRest => {\n        console.log(savedRest)\n        dispatch(addOrder(savedRest))\n      })\n  }\n\n\n\n\n\n\nexport default {\n  //FETCH//\n  addPlaceToProfile,\n  getRestaurants,\n  getPlace,\n  addPlace,\n  getQuery,\n  // fetchPlace,\n  fetchQuery,\n  //LOGIN///\n  newUserToDB,\n  deleteUserFromDB,\n  loginUserToDB,\n  persistUser,\n  logoutUser\n}\n","// import React, { Component } from 'react'\n// import { Link } from 'react-router-dom'\n// import styled from 'styled-components'\n// import { fastfood } from 'react-icons/md'\nimport { IoIosBeer } from 'react-icons/io'\nimport LocalPizzaIcon from '@material-ui/icons/LocalPizza';\n// import '../index.css'\n// import {Sticky} from 'semantic-ui-react'\n\n// const Nav = styled.div`\n//   background-color: #fff;\n//   border-bottom: 1px solid rgba(0, 0, 0, 0.0975);\n  \n// `;\n// const NavHeader = styled.div`\n//   max-width: 1010px;\n//   padding: 26px 20px;\n//   width: 100%;\n//   display: flex;\n//   align-items: center;\n//   margin: 0 auto;\n  \n// `;\n// const NavLeft = styled.div`\n//   width: 33.333%;\n//   text-align: left;\n// `;\n// const NavCenter = styled.div`\n//   width: 33.333%;\n//   text-align: center;\n// `;\n// const Input = styled.input`\n//   font-size: 16px;\n//   border: solid 1px #dbdbdb;\n//   border-radius: 3px;\n//   color: #262626;\n//   padding: 7px 33px;\n//   border-radius: 3px;\n//   color: #999;\n//   cursor: text;\n//   font-size: 14px;\n//   font-weight: 300;\n//   text-align: center;\n//   background: #fafafa;\n//   &:active,\n//   &:focus {\n//     text-align: left;\n//   }\n// `;\n// const NavRight = styled.div`\n//   width: 33.333%;\n//   text-align: right;\n//   svg {\n//     margin-right: 20px;\n//   }\n// `;\n// const Button = styled.button`\n//   display: inline-block;\n//   color: palevioletred;\n//   font-size: 1em;\n//   margin: 1em;\n//   padding: 0.25em 1em;\n//   border: 2px solid palevioletred;\n//   border-radius: 3px;\n//   display: block;\n// `;\n\n// const RedButton = styled(Button) `\n// color: red\n// border-color: red\n// `\n// const StyledLink = styled(Link)`\n// text-decoration: none;\n\n//     &:focus, &:hover, &:visited, &:link, &:active {\n//         text-decoration: none;\n//     }\n\n// `\n\n// class NavBar extends Component {\n    \n//     render() {\n//         return (\n//           // <div>yo</div>\n//           <Sticky>\n//             <Nav>\n//                 <NavHeader>\n//                     <NavLeft>\n//                     <div class=\"dropdown\">\n//                         <button class=\"dropbtn\"> <IoIosBeer/> </button>\n//                         <div class=\"dropdown-content\">\n                            \n//                             <Link to='/home'>Home</Link>\n//                             <a href=\"#\">Profile</a>\n//                             <a href=\"#\">Past Orders</a>\n//                         </div>\n//                     </div>\n//                     </NavLeft>\n//                     <NavCenter>\n//                         {/* <input type='text' placeholder='search'/> */}\n//                         <StyledLink to='/startpage'> <h1>Food App</h1> </StyledLink>\n//                     </NavCenter>\n//                     <NavRight>\n                        \n//                         <RedButton> <Link to='/login'>Login</Link> </RedButton>\n//                     </NavRight>\n//                 </NavHeader>\n//             </Nav>\n//           </Sticky>\n//         )\n//     }\n// }\n// export default NavBar\n\n///////////////////////////////////////////////////////\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport {Link} from 'react-router-dom'\n// import { useSelector } from 'react-redux'\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport { useSelector, useDispatch } from 'react-redux'\nimport userActions from '../redux/actions.js';\nimport {Sticky} from 'semantic-ui-react'\n\nimport Typography from '@material-ui/core/Typography';\n// import Link from '@material-ui/core/Link';\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    \n  },\n  toolbarTitle: {\n    flex: 1,\n  },\n  toolbarSecondary: {\n    justifyContent: 'space-between',\n    overflowX: 'auto',\n  },\n  toolbarLink: {\n    padding: theme.spacing(1),\n    flexShrink: 0,\n  },\n}));\n\n  \n\nexport default function Header(props) {\n  const classes = useStyles();\n  const { sections, title } = props;\n\n  const username = useSelector(state => state.login.username)\n  const login = useSelector(state => state.login)\n  console.log(login.username)\n  const text = username ? (\n    <h2>{username}</h2>\n  ) : (\n    null\n  );\n\n  const dispatch = useDispatch();\n  const handleLogout = () => {\n    dispatch(userActions.logoutUser());\n  };\n  console.log(localStorage)\n\n  const loggedIn = username? (\n    <div>\n      {/* <Link to={`profile/${login.username}`}> */}\n      <Link to='/profile'>\n        <IconButton>\n          <AccountCircleIcon/>\n        </IconButton>\n        </Link>\n        <Link to='/'>\n          <Button variant=\"outlined\" size=\"small\" onClick={handleLogout}>\n            Logout\n          </Button>\n        </Link>\n        </div>\n  ):(<div>\n            \n        <Link to='/login' >\n          <Button variant=\"outlined\" size=\"small\" >\n            Login\n          </Button>\n        </Link>\n      </div>)\n    \n\n\n\n  console.log(username)\n\n  return (\n    \n    // <Sticky>\n    <React.Fragment>\n      <Toolbar className={classes.toolbar}>\n        <Button size=\"small\"><IoIosBeer/></Button>\n        <Typography\n          component=\"h2\"\n          variant=\"h5\"\n          color=\"inherit\"\n          align=\"center\"\n          noWrap\n          className={classes.toolbarTitle}\n        >\n          <div className='title'>\n          \n         <Link style={{ textDecoration: 'none', color: 'black' }} to='/startpage'> <LocalPizzaIcon/> FoodApp</Link>\n         </div>\n        </Typography>{text? text: ''}\n        {/* {username ? 'yo': 'no'} */}\n        {/* <IconButton>\n          <AccountCircleIcon/>\n        </IconButton>\n        <Link to='/login'>\n          <Button variant=\"outlined\" size=\"small\">\n            Login\n          </Button>\n        </Link> */}\n        {loggedIn}\n      </Toolbar>\n      \n    </React.Fragment>\n    // </Sticky>\n  );\n}\n\nHeader.propTypes = {\n  sections: PropTypes.array,\n  title: PropTypes.string,\n};\n","// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import userActions from '../redux/actions';\n// import { useHistory } from \"react-router-dom\"\n\n// const Login = props => {\n//   // initializing dispatch\n//   const dispatch = useDispatch();\n//   // Setting up local state using the useState hook\n//   const [loginForm, setLoginForm] = useState({\n//     username: '',\n//     password: ''\n//   });\n\n//   let history = useHistory();\n//   // controlled form functions\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(userActions.loginUserToDB(loginForm));\n//     history.push(\"/home\");\n//   };\n\n//   const handleChange = e =>\n//     setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n//   // Destructuring keys from our local state to use in the form\n//   const { username, password } = loginForm;\n\n//   console.log(props)\n\n//   // Component code\n//   return (\n//       console.log(loginForm),\n//     <form onSubmit={handleSubmit}>\n//       <h1>Login Page</h1>\n//       <input\n//         type=\"text\"\n//         name=\"username\"\n//         value={username}\n//         onChange={handleChange}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         name=\"password\"\n//         value={password}\n//         onChange={handleChange}\n//         placeholder=\"Password\"\n//       />\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n\n// export default Login;\n\n/////////////////////\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from 'react-router-dom'\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/1600x900/?restaurants,food)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = props => {\n  const classes = useStyles();\n\n  //  initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n\n  let history = useHistory();\n  // controlled form functions\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm));\n    history.push(\"/\");\n  };\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"login\"\n              label=\"Login\"\n              name=\"username\"\n              autoComplete=\"login\"\n\n              \n              value={username}\n              onChange={handleChange}\n\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n\n              \n              value={password}\n              onChange={handleChange}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Log In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                {/* <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link> */}\n              </Grid>\n              <Grid item>\n                <Link to='/signup' variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              {/* <Copyright /> */}\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Login\n","// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import userActions from '../redux/actions.js';\n\n\n// const Signup = props => {\n//   // initializing dispatch\n//   const dispatch = useDispatch();\n\n//   // Setting up local state using the useState hook\n//   const [signupForm, setSignupForm] = useState({\n//     username: '',\n//     password: ''\n//   });\n\n//   // Controlled form functions\n//   const handleChange = e =>\n//     setSignupForm({ ...signupForm, [e.target.name]: e.target.value });\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     const { history } = props;\n//     dispatch(userActions.newUserToDB(signupForm));\n//     // history.push('/');\n//     console.log({history})\n//   };\n\n//   // Destructuring keys from our local state to use in the form\n//   const { username, password } = signupForm;\n//   // console.log(props)\n//   // Component code\n//   return (\n//     <form onSubmit={handleSubmit}>\n//       <h1>Signup Page</h1>\n//       <input\n//         type=\"text\"\n//         name=\"username\"\n//         value={username}\n//         onChange={handleChange}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         name=\"password\"\n//         value={password}\n//         onChange={handleChange}\n//         placeholder=\"Password\"\n//       />\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n\n// export default Signup;\n\n\n/////////////////////////////////////////\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions.js';\nimport { Link } from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\"\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/1600x900/?food,restaurants)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Signup = props => {\n  const classes = useStyles();\n\n  // initializing dispatch\n  const dispatch = useDispatch();\n\n  // Setting up local state using the useState hook\n  const [signupForm, setSignupForm] = useState({\n    username: '',\n    password: ''\n  });\n\n  // Controlled form functions\n  const handleChange = e =>\n  setSignupForm({ ...signupForm, [e.target.name]: e.target.value });\n  \n  \n  let history = useHistory();\n  const handleSubmit = e => {\n    e.preventDefault();\n    // const { history } = props;\n    dispatch(userActions.newUserToDB(signupForm));\n    history.push('/');\n    console.log({history})\n  };\n\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = signupForm;\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign Up\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Username\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n\n              value={username}\n              onChange={handleChange}\n\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n\n              value={password}\n              onChange={handleChange}\n\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                {/* <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link> */}\n              </Grid>\n              <Grid item>\n                <Link to='/login' variant=\"body2\">\n                  {\"Already have an account? Log In\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              {/* <Copyright /> */}\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Signup;","// import React, { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import userActions from '../redux/actions';\n// import { useHistory } from \"react-router-dom\"\n\n// const Login = props => {\n//   // initializing dispatch\n//   const dispatch = useDispatch();\n//   // Setting up local state using the useState hook\n//   const [loginForm, setLoginForm] = useState({\n//     username: '',\n//     password: ''\n//   });\n\n//   let history = useHistory();\n//   // controlled form functions\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     dispatch(userActions.loginUserToDB(loginForm));\n//     history.push(\"/home\");\n//   };\n\n//   const handleChange = e =>\n//     setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n//   // Destructuring keys from our local state to use in the form\n//   const { username, password } = loginForm;\n\n//   console.log(props)\n\n//   // Component code\n//   return (\n//       console.log(loginForm),\n//     <form onSubmit={handleSubmit}>\n//       <h1>Login Page</h1>\n//       <input\n//         type=\"text\"\n//         name=\"username\"\n//         value={username}\n//         onChange={handleChange}\n//         placeholder=\"Username\"\n//       />\n//       <input\n//         type=\"password\"\n//         name=\"password\"\n//         value={password}\n//         onChange={handleChange}\n//         placeholder=\"Password\"\n//       />\n//       <input type=\"submit\" />\n//     </form>\n//   );\n// };\n\n// export default Login;\n\n/////////////////////\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport userActions from '../redux/actions';\nimport { useHistory } from \"react-router-dom\"\nimport { Link } from 'react-router-dom'\n\n\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// import Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n        <Link color=\"inherit\" href=\"https://material-ui.com/\">\n          Your Website\n        </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/1600x900/?restaurants,food)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = props => {\n  const classes = useStyles();\n\n  //  initializing dispatch\n  const dispatch = useDispatch();\n  // Setting up local state using the useState hook\n  const [loginForm, setLoginForm] = useState({\n    username: '',\n    password: ''\n  });\n\n  let history = useHistory();\n  // controlled form functions\n  const handleSubmit = e => {\n    // debugger\n    e.preventDefault();\n    dispatch(userActions.loginUserToDB(loginForm))\n    history.push('/')\n  }\n\n  const handleChange = e =>\n    setLoginForm({ ...loginForm, [e.target.name]: e.target.value });\n\n  // Destructuring keys from our local state to use in the form\n  const { username, password } = loginForm;\n\n\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Log in\n          </Typography>\n        <form className={classes.form} noValidate onSubmit={handleSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"login\"\n              label=\"Login\"\n              name=\"username\"\n              autoComplete=\"login\"\n\n              \n              value={username}\n              onChange={handleChange}\n\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n\n              \n              value={password}\n              onChange={handleChange}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Log In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                {/* <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link> */}\n              </Grid>\n              <Grid item>\n                <Link to='/signup' variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              {/* <Copyright /> */}\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\nexport default Login\n","import React from 'react'\nimport '../index.css'\nimport PlacesAutocomplete, { geocodeByAddress,getLatLng, } from 'react-places-autocomplete';\nimport { Map, GoogleApiWrapper } from 'google-maps-react';\nimport { Link } from 'react-router-dom'\nimport { Redirect } from 'react-router'\nimport { Input } from 'semantic-ui-react'\nimport Pizza from '../Pizza'\n/* global google */\n\n\nimport { connect, useSelector } from 'react-redux'\nimport actions from '../redux/actions'\n\n/////////////////////////////////////////////////\n\nconst API_KEY = process.env.REACT_APP_GOOGLE_KEY\nclass StartPage extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n          place: '',\n          encodedPlace: ''\n        };\n\n      }\n        // state={\n        //     places: ''\n        // }\n    \n      handleChange = (place) => {\n        this.setState({ \n          place\n        });\n        // this.setState({\n        //     [place.target.name]: place.target.value\n        // })\n        console.log(place)\n      };\n      \n    \n      handleSelect = (place, encodedPlace) => {\n        // geocodeByplace(place)\n            // console.log(place)\n            this.setState({\n                place: place,\n                encodedPlace: place\n            })\n            // console.log(this.state)\n            // this.setState({\n            //     redirect: true,\n            //     place: place\n            // })\n            // console.log(this.state)\n            \n        //   .then(results => getLatLng(results[0]))\n        //   .then(latLng => console.log('Success', latLng))\n        //   .catch(error => console.error('Error', error));\n      };\n\n      handleSubmit = (evt) => {\n          evt.preventDefault()\n          // console.log(this.state.place)\n          let uri = this.state.place\n          const uri2 = this.state.encodedPlace\n          const encoded = encodeURI(uri).replace(/,/g, '')\n          const encoded2 = encodeURI(uri2).replace(/,/g, '')\n          // console.log(encoded2)\n          \n          this.setState({\n            redirect: true,\n            encodedPlace: encoded2\n          }\n          \n          // }, () => {\n          //   this.props.addPlace(this.state)\n          // }\n          \n          )\n          // console.log(this.props.addPlace(this.state))\n          // console.log(this.props.getQuery(this.state.encodedPlace))\n          // this.props.getQuery(this.state['encodedPlace'])\n          // console.log(this.state['encodedPlace'])\n          \n\n\n          // this.props.addPlace(this.state.place)\n          \n\n          // console.log(this.props)\n          // console.log(this.props.addPlace(this.state))\n        //   this.props.addPlace(this.state)\n        \n      }\n\n    \n      render() {\n        // console.log(this.props.fetchQuery(this.state.encodedPlace))\n        // console.log(this.props.getQuery(this.state.encodedPlace))\n        // console.log(this.props.fetchPlace(this.state.encodedPlace))\n        // this.props.fetchPlace(this.state.encodedPlace)\n        this.props.getQuery(this.state.encodedPlace)\n        this.props.fetchQuery(this.state.encodedPlace)\n        // console.log(this.props)\n        // console.log(this.state.encodedPlace)\n        // console.log(this.state)\n        if (this.state.redirect) {\n            return <Redirect push to=\"/home\" />;\n          }\n        return (\n            <div>\n              <Pizza/>\n            <form className='image' onSubmit={this.handleSubmit}>\n          <PlacesAutocomplete\n            value={this.state.place}\n            onChange={this.handleChange}\n            onSelect={this.handleSelect}\n          >\n              \n            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n              <div className='image'>\n                <Input action='search' \n                  {...getInputProps({\n                    placeholder: 'Search Location ...',\n                    className: 'location-search-input',\n                  })}\n                />\n                <div className=\"autocomplete-dropdown-container\">\n                  {loading && <div>Loading...</div>}\n                  {suggestions.map(suggestion => {\n                    const className = suggestion.active\n                      ? 'suggestion-item--active'\n                      : 'suggestion-item';\n                    // inline style for demonstration purpose\n                    const style = suggestion.active\n                      ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                      : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                    return (\n                        \n                      <div\n                        {...getSuggestionItemProps(suggestion, {\n                          className,\n                          style,\n                        })}\n                      >\n                        <span>{suggestion.description}</span>\n                      </div>\n                    );\n                  })}\n                </div>\n              </div>\n            )}\n          </PlacesAutocomplete>\n          {/* <input type='submit' value='submit'/> */}\n          </form>\n          </div>\n        );\n      }\n      \n}\n// let connectFunc = connect(null, { addPlace })(StartPage)\nlet googleApi = GoogleApiWrapper({apiKey: API_KEY})(StartPage)\nlet addPlace = actions.addPlace\nlet getQuery = actions.getQuery\nlet fetchQuery = actions.fetchQuery\nlet fetchPlace = actions.fetchPlace\n// export default StartPage\nexport default connect(null, {addPlace, getQuery, fetchQuery, fetchPlace})(googleApi) ;\n\n\n/////////////////////////////////////\n\n\n// const addPlace = actions.addPlace\n\n// // class StartPage extends React.Component {\n//   const StartPage = () => {\n    \n//     const [place, setPlace] = React.useState({\n//       place: ''\n//     })\n\n//     // constructor(props) {\n//     //     super(props);\n//     //     this.state = { place: '' };\n\n//     //   }\n//         // state={\n//         //     places: ''\n//         // }\n    \n//      const handleChange = place => {\n            \n//         setPlace({ \n//           ...place,\n          \n//         });\n//         // this.setState({\n//         //     [place.target.name]: place.target.value\n//         // })\n//       };\n    \n//       const handleSelect = place => {\n//         // geocodeByplace(place)\n//             // console.log(place)\n//             setPlace({\n//                 ...place,\n//                 place: place\n//             })\n//             // this.setState({\n//             //     redirect: true,\n//             //     place: place\n//             // })\n//             // console.log(this.state)\n            \n//         //   .then(results => getLatLng(results[0]))\n//         //   .then(latLng => console.log('Success', latLng))\n//         //   .catch(error => console.error('Error', error));\n//       };\n\n//      const handleSubmit = (evt) => {\n//           evt.preventDefault()\n//           console.log(place)\n//           console.log()\n//           // setPlace({\n//           //   redirect: true\n//           // })\n//           // this.props.addPlace(this.state.place)\n          \n//           let uri = place\n//           let encoded = encodeURI(uri)\n//           console.log(encoded.replace(/,/g, ''))\n//           // console.log(this.props)\n//           // console.log(this.props.addPlace(this.state))\n//         //   this.props.addPlace(this.state)\n        \n//       }\n\n    \n      \n//         if (place.redirect) {\n//             return <Redirect push to=\"/home\" />;\n//           }\n//         return (\n//             <form className='image' onSubmit={handleSubmit}>\n//           <PlacesAutocomplete\n//             value={place}\n//             onChange={handleChange}\n//             onSelect={handleSelect}\n//           >\n              \n//             {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n//               <div className='image'>\n//                 <input\n//                   {...getInputProps({\n//                     placeholder: 'Search Location ....',\n//                     className: 'location-search-input',\n//                   })}\n//                 />\n//                 <div className=\"autocomplete-dropdown-container\">\n//                   {loading && <div>Loading...</div>}\n//                   {suggestions.map(suggestion => {\n//                     const className = suggestion.active\n//                       ? 'suggestion-item--active'\n//                       : 'suggestion-item';\n//                     // inline style for demonstration purpose\n//                     const style = suggestion.active\n//                       ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n//                       : { backgroundColor: '#ffffff', cursor: 'pointer' };\n//                     return (\n                        \n//                       <div\n//                         {...getSuggestionItemProps(suggestion, {\n//                           className,\n//                           style,\n//                         })}\n//                       >\n//                         <span>{suggestion.description}</span>\n//                       </div>\n//                     );\n//                   })}\n//                 </div>\n//               </div>\n//             )}\n//           </PlacesAutocomplete>\n//           <input type='submit' value='submit'/>\n//           </form>\n//         );\n      \n      \n// }\n\n// // let connectFunc = connect(null, { addPlace })(StartPage)\n// let googleApi = GoogleApiWrapper({apiKey: })(StartPage)\n\n// // export default connect(null, {addPlace})(googleApi) ;\n// export default googleApi\n\n\n","import styled from 'styled-components'\n// box-shadow: 0 0 20px rgba(0, 0, 0, .05), 0 0px 40px rgba(0, 0, 0, .08); (from StyledCards)\n\nexport const Title = styled.h2`\n  color: #000000;\n  font-weight: 300;\n`\nexport const FoodImg = styled.img`\nobject-fit: cover;\nwidth: 100%;\nheight: 200px;\nmargin: auto;\n`\nexport const StyledCards = styled.li`\noverflow: hidden;\npadding: 0 0 32px;\nmargin-bottom: 2rem;\nwidth: 25rem;\nfont-family: Quicksand, arial, sans-serif;\n\nborder-radius: 5px;\n`\nexport const SCards = styled.ul`\n\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    margin-left: 2rem;\n    margin-right: 2rem;\n`\nexport const RatingBG = styled.mark`\nbackground-color: #F6F6F6;\npadding: 4px 8px 0px 8px\ndisplay: inline-block\nmargin-top: 8px\nfont-size: 14px\n`\nexport const StyleDiv = styled.div`\nmargin-top: 8px\n`\n\nconst SSkeletonPulse = styled.div`\n  display: inline-block;\n  height: 100%;\n  width: 100%;\n  background: linear-gradient(-90deg, #F0F0F0 0%, #F8F8F8 50%, #F0F0F0 100%);\n  background-size: 400% 400%;\n  animation: pulse 1.2s ease-in-out infinite;\n  @keyframes pulse {\n    0% {\n      background-position: 0% 0%;\n    }\n    100% {\n      background-position: -135% 0%;\n    }\n  }\n`\nconst SSkeletonLine = styled(SSkeletonPulse)`\n  width: 5.5em;\n  border-radius: 5px;\n\n  &::before {\n    content: \"\\00a0\";\n  }\n`\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport actions from '../redux/actions'\nimport Places from \"./Place\"\nimport Pizza from '../Pizza'\nimport '../HomePage.css'\n\nimport { Grid, Image, Card, Rating } from 'semantic-ui-react'\n\nconst Profile = () => {\n\n    const dispatch = useDispatch()\n    \n    const places = useSelector(state => state.place)\n    const orders = useSelector(state => state.order)\n    const [cards, setCards] = useState([])\n\n    \n    \n\n    const username = useSelector(state => state.login.username)\n    const restaurants = useSelector(state => state.login.restaurants)\n    // console.log(restaurants)\n    // console.log(username)\n    const ifUser = username?username:'no one'\n    const API_KEY=process.env.REACT_APP_GOOGLE_PLACES_KEY\n    \n\n    \n\n\n\n    useEffect(() => {\n        generateCards()\n        }, [restaurants])\n\n\n    const generateCards = () => {\n        // console.log(\"hello\", restaurants)\n        let newInfoRest =[]\n        \n        restaurants.forEach(r => {\n            fetch(`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/details/json?placeid=${r.place_id}&key=${API_KEY}`)\n            .then(r => r.json())\n            .then((data) => { \n                console.log(r)\n                // console.log(data.result)\n                // setCards([...cards, data.result])\n                // console.log(newInfoRest)\n                \n                newInfoRest = [...newInfoRest, data.result]\n                // console.log(newInfoRest)\n                setCards(newInfoRest)\n            })\n        });\n    }\n    \n\n    const showCards = () => {\n        \n       return cards.map(card => {\n        let ifPhoto = (card.photos? card.photos[0].photo_reference : \"CmRaAAAAhITrIBjd8kRzu0ahi_XZAb32Skza-3DgpwLPabXm5iVZa26xPBdHcC2Keip0bpuUimsoG0wP_aECeM4wE8kc55Ebvjisca6bgsjh_OOjRtrjQRdDzVcpyEMPAub8AhcIEhBH40_RFwrYLiHhzyz-xKAGGhQAKLLb3VR7Hd9qSWV2H4O90Suxzg\")\n        let ifOpen = (card.opening_hours? card.opening_hours['open_now']? 'Open':'Closed' : '')\n            // return <Places c={card} key={card.id} />\n            // console.log(card)\n            // return<li>{card.name}</li>\n            /////////////////////////////////////////////\n            \n            return(\n    \n            <Grid.Column>\n                <Card>\n                    <Image src={`https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/place/photo?maxwidth=400&maxheight=200&photoreference=${ifPhoto}&key=${API_KEY}`}/>\n                    <Card.Content>\n                        <Card.Header>{card.name}</Card.Header>\n                        {/* <Card.Meta>{ifOpen}</Card.Meta> */}\n                        <Card.Description>\n                            like\n                            {/* {card.types} */}\n                        {/* {AddShoppingCartIcon} */}\n                        </Card.Description>\n                    </Card.Content>\n                        <Card.Content extra>\n                        {/* <a>\n                            <Icon name='user' />\n                            10 Friends\n                        </a> */}\n                            <Rating icon='star' defaultRating={card.rating} maxRating={5} />\n                \n                        </Card.Content>\n                </Card>             \n            </Grid.Column>\n        \n    \n            )\n        })\n    }\n    \n    \n    \n\n    return (\n        <div>\n            <Pizza/>\n            <h1 style={{textAlign: 'center'}}>{ifUser}'s favorites</h1>\n            <Grid columns={3} divided>\n                <Grid.Row >\n                    \n                    \n                        {showCards()}\n                    \n                </Grid.Row>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Profile\n\n","import React, { useEffect, useState } from 'react'\nimport Pizza from './Pizza'\n\n\n//routing\nimport{ Route, Switch } from 'react-router'\nimport NavBar from './components/NavBar'\n//\nimport Login from './components/Login'\nimport Signup from './components/Signup'\n\nimport HomePage from './components/HomePage'\nimport StartPage from './components/StartPage'\nimport Profile from './components/Profile'\nimport actions from './redux/actions'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport {connect} from 'react-redux'\n\n\n// let allPlaces = actions.allPlaces\n// let getPlace = actions.getPlace\n// class App extends Component {\n  const App = () => {\n    \n    // const dispatch = useDispatch()\n    \n    // useEffect(() => {\n    //   dispatch(allPlaces())\n    // },\n    // [dispatch]\n    // ) \n\n    \n\n    const state = useSelector(state => {\n      return{\n        place: state.place,\n        query: state.query,\n        placeID: state.login.restaurants\n        \n        // encodedPlace: state.encodedPlace\n      }\n    })\n    \n    const dispatch = useDispatch()\n    \n    console.log(state.login)\n    useEffect(() => {\n      if (localStorage.token) {\n        dispatch(actions.persistUser());\n        \n      }\n      \n      dispatch(actions.getPlace(state.query))\n      \n      // dispatch(actions.getQuery())\n      console.log(state.query)\n    }, [state.query])\n    \n    // console.log(localStorage)\n    return (\n      <div>\n        \n        <Switch>\n          <Route path='/login' render={() => <Login/>}/>\n          <Route path='/signup' render={() => <Signup/>}/>\n          <Route path='/home' render={() => <HomePage/>}/>\n          <Route path='/profile' render={() => <Profile/>}/>\n          <Route path='/' render={() => <StartPage />}/>\n        </Switch>\n\n        {/* <h1> hello from App! </h1> */}\n        \n        \n      </div>\n    )\n  }\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\n    query: 'dumbo'\n}\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n\n    // case 'GET_QUERY':\n    //     return payload\n    case 'FETCH_QUERY':\n        return payload\n    default:\n        return state\n    }\n}\n","import React, { useEffect } from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux'\nimport thunk from 'redux-thunk'\nimport NavBar from './components/NavBar';\nimport 'semantic-ui-css/semantic.min.css'\n\n\n\n\n\n\n\n//REDUCERS\nimport place from './redux/placeReducer'\nimport query from './redux/queryReducer'\nimport login from './redux/loginReducer'\nimport order from './redux/ordersReducer'\n\nconst rootReducer = combineReducers({\n    place: place,\n    query: query,\n    login: login,\n    order: order\n\n  })\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\n\n\nReactDOM.render(\n    \n    <Provider store={store}>\n    <Router>\n        <NavBar/>\n        <App>\n            {/* <NavBar/> */}\n\n        </App>\n    </Router>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const initialState = {\n    place: [],\n    placesArr: []\n}\n\n// const placeReducer = (state = initialState, action) => {\n//     switch (action.type){\n//         case \"ADD_PLACE\":\n//             let spreadedPlace = [...state.place, action.payload]\n//             return { \n//             ...state,\n//             place: spreadedPlace\n//         }\n//         default:\n//             return state\n//     }\n// }\n\n// export default placeReducer\n\n//////////////////////////////////////////////////////////////////////////\n\n\n// export default (state = {search: \"\", places: []}, { type, payload }) => {\nexport default (state = [], { type, payload }) => {\n    switch (type) {\n      case 'GET_PLACE':\n        return payload;\n      case \"ADD_PLACE\":\n          return [...state, payload]\n      default:\n        return state;\n    }\n  };\n","\nexport default (state = {restaurants:[]}, { type, payload }) => {\n    switch (type) {\n      case 'SET_USER':\n        return payload;\n      case 'CLEAR_USER':\n        return {};\n      default:\n        return state;\n    }\n  };","\n\nexport default (state = [], { type, payload }) => {\n    switch (type) {\n      case 'GET_ORDER':\n        return payload;\n      case \"ADD_ORDER\":\n          return [...state, payload]\n      default:\n        return state;\n    }\n  };"],"sourceRoot":""}